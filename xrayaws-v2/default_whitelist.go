// Code generated by codegen.go; DO NOT EDIT

package xrayaws

import "github.com/shogo82148/aws-xray-yasdk-go/xrayaws-v2/whitelist"

var defaultWhitelist = &whitelist.Whitelist{
	Services: map[string]*whitelist.Service{
		"dynamodb": {
			Operations: map[string]*whitelist.Operation{
				"BatchGetItem": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"RequestItems": {
							Map:      true,
							GetKeys:  true,
							RenameTo: "table_names",
						},
					},
					ResponseParameters: []string{
						"ConsumedCapacity",
					},
				},
				"BatchWriteItem": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"RequestItems": {
							Map:      true,
							GetKeys:  true,
							RenameTo: "table_names",
						},
					},
					ResponseParameters: []string{
						"ConsumedCapacity",
						"ItemCollectionMetrics",
					},
				},
				"CreateTable": {
					RequestParameters: []string{
						"GlobalSecondaryIndexes",
						"LocalSecondaryIndexes",
						"ProvisionedThroughput",
						"TableName",
					},
				},
				"DeleteItem": {
					RequestParameters: []string{
						"TableName",
					},
					ResponseParameters: []string{
						"ConsumedCapacity",
						"ItemCollectionMetrics",
					},
				},
				"DeleteTable": {
					RequestParameters: []string{
						"TableName",
					},
				},
				"DescribeTable": {
					RequestParameters: []string{
						"TableName",
					},
				},
				"GetItem": {
					RequestParameters: []string{
						"ConsistentRead",
						"ProjectionExpression",
						"TableName",
					},
					ResponseParameters: []string{
						"ConsumedCapacity",
					},
				},
				"ListTables": {
					RequestParameters: []string{
						"ExclusiveStartTableName",
						"Limit",
					},
					ResponseDescriptors: map[string]*whitelist.Descriptor{
						"TableNames": {
							List:     true,
							GetCount: true,
							RenameTo: "table_count",
						},
					},
				},
				"PutItem": {
					RequestParameters: []string{
						"TableName",
					},
					ResponseParameters: []string{
						"ConsumedCapacity",
						"ItemCollectionMetrics",
					},
				},
				"Query": {
					RequestParameters: []string{
						"AttributesToGet",
						"ConsistentRead",
						"IndexName",
						"Limit",
						"ProjectionExpression",
						"ScanIndexForward",
						"Select",
						"TableName",
					},
					ResponseParameters: []string{
						"ConsumedCapacity",
					},
				},
				"Scan": {
					RequestParameters: []string{
						"AttributesToGet",
						"ConsistentRead",
						"IndexName",
						"Limit",
						"ProjectionExpression",
						"Segment",
						"Select",
						"TableName",
						"TotalSegments",
					},
					ResponseParameters: []string{
						"ConsumedCapacity",
						"Count",
						"ScannedCount",
					},
				},
				"UpdateItem": {
					RequestParameters: []string{
						"TableName",
					},
					ResponseParameters: []string{
						"ConsumedCapacity",
						"ItemCollectionMetrics",
					},
				},
				"UpdateTable": {
					RequestParameters: []string{
						"AttributeDefinitions",
						"GlobalSecondaryIndexUpdates",
						"ProvisionedThroughput",
						"TableName",
					},
				},
			},
		},
		"lambda": {
			Operations: map[string]*whitelist.Operation{
				"Invoke": {
					RequestParameters: []string{
						"FunctionName",
						"InvocationType",
						"LogType",
						"Qualifier",
					},
					ResponseParameters: []string{
						"FunctionError",
						"StatusCode",
					},
				},
				"InvokeAsync": {
					RequestParameters: []string{
						"FunctionName",
					},
					ResponseParameters: []string{
						"Status",
					},
				},
			},
		},
		"runtime.sagemaker": {
			Operations: map[string]*whitelist.Operation{
				"InvokeEndpoint": {
					RequestParameters: []string{
						"EndpointName",
					},
				},
			},
		},
		"s3": {
			Operations: map[string]*whitelist.Operation{
				"AbortMultipartUpload": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
					},
				},
				"CompleteMultipartUpload": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
					},
				},
				"CopyObject": {
					RequestParameters: []string{
						"CopySource",
						"Bucket",
						"Key",
					},
				},
				"CreateBucket": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteBucket": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteBucketAnalyticsConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteBucketCors": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteBucketEncryption": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteBucketInventoryConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteBucketLifecycleConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteBucketMetricsConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteBucketPolicy": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteBucketReplicationConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteBucketTagging": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteBucketWebsite": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteObject": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
					},
				},
				"DeleteObjectTagging": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
						"VersionId",
					},
				},
				"DeleteObjects": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"DeleteVersion": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
						"VersionId",
					},
				},
				"GeneratePresignedUrl": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
						"VersionId",
					},
				},
				"GetBucketAccelerateConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketAcl": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketAnalyticsConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketCors": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketEncryption": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketInventoryConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketLifecycleConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketLocation": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketLogging": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketMetricsConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketNotificationConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketPolicy": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketReplicationConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketTagging": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketVersioning": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetBucketWebsite": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"GetObject": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
						"VersionId",
					},
				},
				"GetObjectAcl": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
						"VersionId",
					},
				},
				"GetObjectTagging": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
						"VersionId",
					},
				},
				"HeadBucket": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"InitiateMultipartUpload": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
					},
				},
				"ListBucketAnalyticsConfigurations": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"ListBucketInventoryConfigurations": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"ListBucketMetricsConfigurations": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"ListMultipartUploads": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Prefix",
					},
				},
				"ListObjects": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Prefix",
					},
				},
				"ListObjectsV2": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Prefix",
					},
				},
				"ListParts": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
					},
				},
				"ListVersions": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Prefix",
					},
				},
				"PutBucketAccelerateConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketAcl": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketAnalyticsConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketCors": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketEncryption": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketInventoryConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketMetricsConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketNotificationConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketPolicy": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketReplicationConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketTagging": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketVersioning": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutBucketWebsite": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"PutObject": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
					},
				},
				"PutObjectTagging": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
						"VersionId",
					},
				},
				"RestoreObject": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
						"VersionId",
					},
				},
				"RestoreObjectV2": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
						"VersionId",
					},
				},
				"SetBucketLifecycleConfiguration": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"SetBucketLogging": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
				},
				"SetObjectAcl": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
						"VersionId",
					},
				},
				"UploadPart": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Bucket": {
							RenameTo: "bucket_name",
						},
					},
					RequestParameters: []string{
						"Key",
					},
				},
			},
		},
		"sns": {
			Operations: map[string]*whitelist.Operation{
				"Publish": {
					RequestParameters: []string{
						"TopicArn",
					},
				},
				"PublishBatch": {
					RequestParameters: []string{
						"TopicArn",
					},
				},
			},
		},
		"sqs": {
			Operations: map[string]*whitelist.Operation{
				"AddPermission": {
					RequestParameters: []string{
						"Label",
						"QueueUrl",
					},
				},
				"ChangeMessageVisibility": {
					RequestParameters: []string{
						"QueueUrl",
						"VisibilityTimeout",
					},
				},
				"ChangeMessageVisibilityBatch": {
					RequestParameters: []string{
						"QueueUrl",
					},
					ResponseParameters: []string{
						"Failed",
					},
				},
				"CreateQueue": {
					RequestParameters: []string{
						"Attributes",
						"QueueName",
					},
				},
				"DeleteMessage": {
					RequestParameters: []string{
						"QueueUrl",
					},
				},
				"DeleteMessageBatch": {
					RequestParameters: []string{
						"QueueUrl",
					},
					ResponseParameters: []string{
						"Failed",
					},
				},
				"DeleteQueue": {
					RequestParameters: []string{
						"QueueUrl",
					},
				},
				"GetQueueAttributes": {
					RequestParameters: []string{
						"QueueUrl",
					},
					ResponseParameters: []string{
						"Attributes",
					},
				},
				"GetQueueUrl": {
					RequestParameters: []string{
						"QueueName",
						"QueueOwnerAWSAccountId",
					},
					ResponseParameters: []string{
						"QueueUrl",
					},
				},
				"ListDeadLetterSourceQueues": {
					RequestParameters: []string{
						"QueueUrl",
					},
					ResponseParameters: []string{
						"QueueUrls",
					},
				},
				"ListQueues": {
					RequestParameters: []string{
						"QueueNamePrefix",
					},
					ResponseDescriptors: map[string]*whitelist.Descriptor{
						"QueueUrls": {
							List:     true,
							GetCount: true,
							RenameTo: "queue_count",
						},
					},
				},
				"PurgeQueue": {
					RequestParameters: []string{
						"QueueUrl",
					},
				},
				"ReceiveMessage": {
					RequestParameters: []string{
						"AttributeNames",
						"MaxNumberOfMessages",
						"MessageAttributeNames",
						"QueueUrl",
						"VisibilityTimeout",
						"WaitTimeSeconds",
					},
					ResponseDescriptors: map[string]*whitelist.Descriptor{
						"Messages": {
							List:     true,
							GetCount: true,
							RenameTo: "message_count",
						},
					},
				},
				"RemovePermission": {
					RequestParameters: []string{
						"QueueUrl",
					},
				},
				"SendMessage": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"MessageAttributes": {
							Map:      true,
							GetKeys:  true,
							RenameTo: "message_attribute_names",
						},
					},
					RequestParameters: []string{
						"DelaySeconds",
						"QueueUrl",
					},
					ResponseParameters: []string{
						"MessageId",
					},
				},
				"SendMessageBatch": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Entries": {
							List:     true,
							GetCount: true,
							RenameTo: "message_count",
						},
					},
					RequestParameters: []string{
						"QueueUrl",
					},
					ResponseDescriptors: map[string]*whitelist.Descriptor{
						"Failed": {
							List:     true,
							GetCount: true,
							RenameTo: "failed_count",
						},
						"Successful": {
							List:     true,
							GetCount: true,
							RenameTo: "successful_count",
						},
					},
				},
				"SetQueueAttributes": {
					RequestDescriptors: map[string]*whitelist.Descriptor{
						"Attributes": {
							Map:      true,
							GetKeys:  true,
							RenameTo: "attribute_names",
						},
					},
					RequestParameters: []string{
						"QueueUrl",
					},
				},
			},
		},
	},
}
